package ${packagePath}


import com.springcloud.common.utils.BeanCopyUtil;
import com.springcloud.common.vo.DatePageVO;

${importEntity}
${importService}
${importDao}
${importDto}
${importVO}


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.util.StringUtils;

import java.util.List;
import java.util.ArrayList;
import javax.persistence.criteria.Predicate;


/**
 * ServiceImpl
 *
 * @author create by generate-code
 * @E-mail liaofuxing@outlook.com
 * @date ${generateDate}
 **/
@Service
public class ${className} implements ${entityServiceInterface} {

    @Autowired
    private ${entityDao} ${entityDaoParam};


    /**
     *
     * find by id
     * @param id this id
     * @return ${entity} byId
     */
     public ${entity} find${entity}ById(Integer id){
        return ${entityDaoParam}.findById(id).get();
     }

     /**
      *
      * find ${entity} list
      * @return List<${entity}> ${entity} list
      */
     public List<${entity}> find${entity}List(){
        return ${entityDaoParam}.findAll();
     }


    /**
     *
     * add
     * @param ${entityDtoParam} this ${entityDtoParam}
     *
     */
    @Transactional
    @Override
    public void add${entity}(${entityDto} ${entityDtoParam}) {
        ${entity} ${entityParam} = new ${entity}();
        BeanCopyUtil.copyProperties(${entityDtoParam}, ${entityParam});
        ${entityDaoParam}.save(${entityParam});
    }

    /**
     *
     * edit
     * @param ${entityDtoParam} this ${entityDtoParam}
     *
     */
    @Transactional
    @Override
    public void edit${entity}(${entityDto} ${entityDtoParam}) {
        ${entity} ${entityParam}DB = this.find${entity}ById(${entityDtoParam}.getId());
        BeanCopyUtil.copyProperties(${entityDtoParam}, ${entityParam}DB);
        ${entityDaoParam}.save(${entityParam}DB);
    }


